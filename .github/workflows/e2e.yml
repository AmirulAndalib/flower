name: E2E

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  FLWR_TELEMETRY_ENABLED: 0

jobs:
  e2e:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    # Using approach described here:
    # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
    strategy:
      matrix:
        include:
          - directory: bare
            cache-hash-files: e2e/bare/pyproject.toml

          - directory: jax
            cache-hash-files: e2e/jax/pyproject.toml

          - directory: pytorch
            cache-hash-files: e2e/pytorch/pyproject.toml
            dataset: |
              from torchvision.datasets import CIFAR10
              CIFAR10('./data', download=True)

          - directory: tensorflow
            cache-hash-files: e2e/tensorflow/pyproject.toml
            dataset: |
              import tensorflow as tf
              tf.keras.datasets.cifar10.load_data()

          - directory: opacus
            cache-hash-files: e2e/opacus/pyproject.toml
            dataset: |
              from torchvision.datasets import CIFAR10
              CIFAR10('./data', download=True)

          - directory: mxnet
            cache-hash-files: e2e/mxnet/pyproject.toml
            dataset: |
              import mxnet as mx
              mx.test_utils.get_mnist()

          - directory: scikit-learn
            cache-hash-files: e2e/lear/pyproject.toml
            dataset: |
              import openml
              openml.datasets.get_dataset(554)

          - directory: fastai
            cache-hash-files: e2e/fastai/pyproject.toml
            dataset: |
              from fastai.vision.all import untar_data, URLs
              untar_data(URLs.MNIST) 

          - directory: pandas
            cache-hash-files: e2e/pandas/pyproject.toml
            dataset: |
              from pathlib import Path
              from sklearn.datasets import load_iris
              Path('data').mkdir(exist_ok=True)
              load_iris(as_frame=True)['data'].to_csv('./data/client.csv')

    name: ${{matrix.directory}}

    defaults:
      run:
        working-directory: e2e/${{ matrix.directory }}

    steps:
      - uses: actions/checkout@v3
      - name: Bootstrap
        id: bootstrap
        uses: ./.github/actions/bootstrap
        with:
          python-version: 3.8
          cache-hash-files: ${{ matrix.cache-hash-files }}
      - name: Install dependencies
        run: poetry install
      - name: Download dataset
        if: ${{matrix.dataset}}
        run: poetry run python -c "${{ matrix.dataset }}"
      - name: Run edge client test
        run: poetry run ./test.sh
      - name: Run virtual client test
        run: poetry run python simulation.py
